   

def recup_detail_video_yt(video_ids,youtube):
    """
    RÃ©cupÃ¨re les dÃ©tails des vidÃ©os via l'API YouTube.
    en partant de la liste des video_ids
    Si on a plus de 50 vidÃ©os Ã  traiter.
    RÃ©cupÃ¨re les dÃ©tails des vidÃ©os en batchs de 50 max (limite API).
    
    """
    print(f"ğŸ›  DÃ©but de recup_detail_video_yt : {len(video_ids)} vidÃ©os Ã  rÃ©cupÃ©rer")
    
    video_details = []  # Liste qui va stocker tous les rÃ©sultats

    # ğŸ”¹ DÃ©couper la liste en batchs de 50 vidÃ©os max
    for i in range(0, len(video_ids), 50):
        batch = video_ids[i:i + 50]  # SÃ©lectionne un groupe de 50 vidÃ©os max
        print(f"Envoi du batch {i//50+1} Ã  l'API YouTube : {batch}")

        try:
            response = youtube.videos().list(
                part='snippet,contentDetails,statistics',
                id=','.join(batch)  # Transforme le batch en une seule chaÃ®ne
            ).execute()

            video_details.extend(response.get('items', []))  # Ajouter les rÃ©sultats du batch

        except Exception as e:
            print(f"Erreur lors de la rÃ©cupÃ©ration des dÃ©tails : {e}")

    print(f"ğŸ›  Fin de recup_detail_video_yt - {len(video_details)} vidÃ©os rÃ©cupÃ©rÃ©es")
    return video_details  # Retourne la liste complÃ¨te
